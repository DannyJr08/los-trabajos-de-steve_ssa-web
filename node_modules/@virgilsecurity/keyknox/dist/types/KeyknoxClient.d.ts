import { VirgilAgent } from 'virgil-sdk';
import { AxiosInstance, IAccessTokenProvider, EncryptedKeyknoxValueV1, DecryptedKeyknoxValueV1, EncryptedKeyknoxValueV2, DecryptedKeyknoxValueV2 } from './types';
declare type GetKeysResponse = string[];
export declare class KeyknoxClient {
    private static readonly API_URL;
    private readonly accessTokenProvider;
    private readonly axios;
    private readonly virgilAgent;
    constructor(accessTokenProvider: IAccessTokenProvider, apiUrl?: string, axiosInstance?: AxiosInstance, virgilAgent?: VirgilAgent);
    v1Push(meta: string, value: string, keyknoxHash?: string): Promise<EncryptedKeyknoxValueV1>;
    v1Pull(): Promise<EncryptedKeyknoxValueV1>;
    v1Reset(): Promise<DecryptedKeyknoxValueV1>;
    v2Push(options: {
        root: string;
        path: string;
        key: string;
        identities: string[];
        meta: string;
        value: string;
        keyknoxHash?: string;
    }): Promise<EncryptedKeyknoxValueV2>;
    v2Pull(options: {
        root: string;
        path: string;
        key: string;
        identity?: string;
    }): Promise<EncryptedKeyknoxValueV2>;
    v2GetKeys(options: {
        root?: string;
        path?: string;
        identity?: string;
    }): Promise<GetKeysResponse>;
    v2Reset(options: {
        root?: string;
        path?: string;
        key?: string;
        identity?: string;
    }): Promise<DecryptedKeyknoxValueV2>;
    private static getKeyknoxValueV1;
    private static getKeyknoxValueV2;
    private static getHeaders;
    private static responseErrorHandler;
}
export {};
