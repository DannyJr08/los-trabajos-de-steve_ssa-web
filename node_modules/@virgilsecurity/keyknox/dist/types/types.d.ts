export declare type AxiosInstance = import('axios').AxiosInstance;
export declare type AxiosError = import('axios').AxiosError;
export declare type AxiosRequestConfig = import('axios').AxiosRequestConfig;
export declare type Data = import('@virgilsecurity/crypto-types').Data;
export declare type ICrypto = import('@virgilsecurity/crypto-types').ICrypto;
export declare type IPrivateKey = import('@virgilsecurity/crypto-types').IPrivateKey;
export declare type IPublicKey = import('@virgilsecurity/crypto-types').IPublicKey;
export declare type IKeyPair = import('@virgilsecurity/crypto-types').IKeyPair;
export declare type IGroupSessionMessageInfo = import('@virgilsecurity/crypto-types').IGroupSessionMessageInfo;
export declare type IAccessTokenProvider = import('virgil-sdk').IAccessTokenProvider;
export declare type IAccessToken = import('virgil-sdk').IAccessToken;
export declare type ICard = import('virgil-sdk').ICard;
export declare type IKeyEntry = import('virgil-sdk').IKeyEntry;
export declare type IKeyEntryStorage = import('virgil-sdk').IKeyEntryStorage;
export declare type ISaveKeyEntryParams = import('virgil-sdk').ISaveKeyEntryParams;
export declare type IUpdateKeyEntryParams = import('virgil-sdk').IUpdateKeyEntryParams;
export declare type Meta = {
    [key: string]: string;
} | null;
export interface KeyknoxValueV1 {
    meta: string;
    value: string;
    version: string;
    keyknoxHash: string;
}
export interface DecryptedKeyknoxValueV1 extends KeyknoxValueV1 {
}
export interface EncryptedKeyknoxValueV1 extends KeyknoxValueV1 {
}
export interface KeyknoxValueV2 {
    owner: string;
    root: string;
    path: string;
    key: string;
    identities: string[];
    meta: string;
    value: string;
    keyknoxHash: string;
}
export interface DecryptedKeyknoxValueV2 extends KeyknoxValueV2 {
}
export interface EncryptedKeyknoxValueV2 extends KeyknoxValueV2 {
}
export interface GroupTicket {
    groupSessionMessageInfo: {
        sessionId: string;
        epochNumber: number;
        data: string;
    };
    identities: string[];
}
export interface CloudEntry {
    name: string;
    data: string;
    creationDate: Date;
    modificationDate: Date;
    meta: Meta;
}
export interface KeyEntry {
    name: string;
    data: string;
    meta?: Meta;
}
