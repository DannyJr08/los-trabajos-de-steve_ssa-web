import { VirgilAgent } from 'virgil-sdk';
import { IPythiaClient, TransformPasswordResult } from './IPythiaClient';
import { IAccessTokenProvider } from './types';
export declare class PythiaClient implements IPythiaClient {
    private static readonly DEFAULT_URL;
    private readonly accessTokenProvider;
    private readonly axios;
    private readonly virgilAgent;
    constructor(accessTokenProvider: IAccessTokenProvider, apiUrl?: string, virgilAgent?: VirgilAgent);
    generateSeed(blindedPassword: string, brainKeyId?: string): Promise<any>;
    transformPassword(options: {
        blindedPassword: string;
        salt: string;
        version?: number;
        includeProof?: boolean;
    }): Promise<TransformPasswordResult>;
    private static getHeaders;
    private static onBadResponse;
}
